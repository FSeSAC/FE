.container {
    width: 300px;
    height: 500px;
    background-color: #333;
    margin: 0 auto;

    display: flex;
    /* 부모 요소에 `flex`선언시, 자식요소가 가로방향으로 배치 */

    /* 
        Flexbox 기본 용어
        *  주축(Main Axis)
        - Flex 컨테이너 내, Flex 아이템들이 배치되는 기본 방향인 축

        * 교차축(Cross Axis)
        - 주축에 수직인 축
    */

    /* ----------------------------------- */

    /* 
        flex-direction : flex 주축 방향을 설정
            - row(default) : 수평 정렬 / 좌 -> 우
            - row-reverse : 수평 정렬 / 우 -> 좌
            - column : 수직 정렬 / 위 -> 아래
            - column-reverse : 수직정렬 / 아래 -> 위
    */

    /* row 일 때 */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* column 일대 때 */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /* ----------------------------------- */

    /* 
        justify-content : 주축을 따라 아이템 정렬의 방향
        - flex-direction이 수평 정렬, 주축 = row(가로)
        - flex-direction이 수직 정렬, 주축 = column(세로)

        - flex-start(default) : 아이템의 주축을 start지점으로 기준
        - flex-end : 아이템 주축을 end 지점으로 기준

        - space-between : 처음과 마지막 아이템을 양 끝에 배치 후 나머지를 공평하게 배열
        - space-around : 아이템의 모든 여백을 공평하게 배열(양끝 영역의 단위가 1이면, 나머지 영역
        - space-evenly : start부터 첫 아이템의 간격, 아이템끼리의 간격, 마지막 아이템 부터 end까지의 모든 

    */

    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    /* ----------------------------------- */

    /* 
        align-items : 교차축에 대해 아이템을 어떻게 배치하는 방법
        - flex-direction이 수평 정렬 : 교차축 = column / 세로
        - flex-direction이 수직 정렬 : 교차축 = row / 가로

        - stretch(default) : container의 교차축을 채우기 위해 늘림

        - flex-start : 교차축에 대해 시작점으로 정렬
        - flex-end: 교차축에 대해 끝점으로 정렬
        - center : 교차축에 대해 가운데 정렬
        - baseline : 아이템을 텍스트 베이스라인을 기준 정렬
    */

    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */
    /* align-items: baseline; */
    /* align-items: stretch; */

    /* ----------------------------------- */

    /* 
        flex-wrap : 줄바꿈/개행 처리
            -> 컨테이너/부모가 한 줄에 아이템을 전부 수용 못할시, 줄바꿈 설정
        - nowrap(default) : 줄바꿈 안함
        - wrap : 줄바꿈 설정
        - wrap-reverse : 역순으로 줄바꿈 설정
    */

    /* flex-wrap: nowrap; */
    flex-wrap: wrap;
    /* flex-wrap: wrap-reverse; */


    /* 
        align-content : 여러 행에  대한 정렬
        조건> flex-wrap:wrap / wrap-reverse 상태시 아이템이 두줄 이상일 때 수직축 방향 설정
    */

    /* align-content: stretch */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: center; */
    /* align-content: space-between; */
    /* align-content: space-around; */
}


.items {
    width: 100px;
    height: 100px;
    font-weight: 700;
    text-align: center;
    line-height: 100px;
}

.item1{
    background-color: red;
    font-size: 10px;
}

.item2{
    background-color: orange;
    font-size: 15px;
}

.item3{
    background-color: yellow;
    font-size: 20px;
}

.item4{
    background-color: green;
    font-size: 25px;
}

.item5{
    background-color: blue;
    font-size: 30px;
}

.v1_side  {
    width: 500px;
    height: 500px;
    background-color: greenyellow;
}

.v1_inner{
    width: 100px;
    height: 100px;
    background-color: pink;
    position: relative;
    left: 200px;
    top: 200px;
    
}

.v2_side  {
    width: 500px;
    height: 500px;
    background-color: lightblue;
    display: flex;
    justify-content: center;
    align-items: center;
}

.v2_inner{
    width: 100px;
    height: 100px;
    background-color: pink;
}
