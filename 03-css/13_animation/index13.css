/* 
    - animation-name: @keyframes 애니메이션 이름 지정
        - 시작 : from or 0%
        - 중간 : 0 ~ 100%
        - 끝 : to or 100%
    
    - animation-duration : 애니메이션이 한 번 재생되는데 걸리는 시간 지정(단위: s)
    - animation-delay : 애니메이션이 시작되기 전에 기다리는 시간 지정(단위: s)
    - animation-iteration-count: 애니메이션 반속 횟수(default: 1, infinite: 무한 반복)
        - linearm, ease, ease-in, ease-in-out 등등
    - animation-directio : 애니메이션의 방향 지정
        - normal, reverse, alternate(반복 할때마다 방향 전환), alternate-reverse
        - alternate : from -> to 방향으로 애니메이션 진행 -> (다음회차) to -> from 방향을 전환하며 반복
*/


.box {
    width: 100px;
    height: 100px;
    background-color: cornflowerblue;
    position: relative;
    
    animation-name: rani;
    animation-duration: 2s;
    animation-delay: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
}

@keyframes rani {
    0% {
        left: 0px;
    }

    25% {
        left: 200px;
    }

    50% {
        left: 400px;
    }

    75% {
        left: 200px;
    }

    100% {
        left: 0px;
    }
}

.bounce-ball1 {
    position: relative;
    width: 100px;
    height: 100px;
    background-color: burlywood;
    border-radius: 50%;
    left: 100px;
    top: 0;

    /* animation-name: bounce1;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: ease-out;
    animation-direction: alternate; */

    /* 애니메이션 단축 프로퍼티 */
    animation: bounce1 1s ease-out infinite alternate;
}

@keyframes bounce1 {
    to {
        top: 50px;
    }
    
    from {
        top: 300px;
    }
}

.bounce-ball2 {
    width: 50px;
    height: 50px;
    background-color: black;
    border-radius: 50%;
    position: absolute;

    animation: bounce2 2s infinite;
}    

@keyframes bounce2 {
    from, to {
        bottom: 0px;
        animation-timing-function: ease-out;
        /* 0px에서 정상속도 시작 -> 감속하며 300px */
    }
    50% {
        bottom: 300px;7
        animation-timing-function: ease-in;
        /* 300px에서 천천히 증속 시작 -> 0px로 가며 정상속도로 종료 */
    }
}

/* 
    Tip)
    * from에서 to로의 애니메이션 (정방향 애니메이션) (from ~to)

    - from은 애니메이션의 시작 상태를 의미
    - to는 애니메이션의 종료 상태를 의미
    이러한 경우, 애니메이션은 from 상태에서 시작해서 to 상태로 종료
*/